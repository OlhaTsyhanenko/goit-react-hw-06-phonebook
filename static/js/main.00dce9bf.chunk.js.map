{"version":3,"sources":["components/ContactList/contactList.module.css","components/Filter/filter.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","combineReducers","items","state","id","name","number","type","payload","types","find","contact","toLowerCase","alert","console","log","filter","rootReducer","contacts","reducer","store","createStore","composeWithDevTools","shortid","generate","contactId","value","connect","dispatch","onAddContact","actions","useState","setName","setNumber","nameInputId","numberInputId","handleChange","e","target","reset","className","styles","contactForm","onSubmit","preventDefault","htmlFor","pattern","title","required","onChange","contactName","contactNumber","btn","visibleContacts","allContacts","normalizedFilter","includes","getVisibleContacts","onDeleteContact","contactList","map","contactList__item","onClick","label","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00dce9bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"contactList_btn__24V0C\",\"contactList\":\"contactList_contactList__2Qoz6\",\"contactList__item\":\"contactList_contactList__item__c5wDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__2xCST\",\"label\":\"filter_label__27sXR\"};","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    ADD: 'contacts/add',\r\n    DELETE: 'contacts/delete',\r\n    FILTER: 'contacts/filter',\r\n};","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\n\r\n\r\nconst items = (state =\r\n    [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }],\r\n    { type, payload }) => {\r\n    switch (type) {\r\n        case types.ADD:\r\n                if (state.find(contact => contact.name.toLowerCase() === payload.name.toLowerCase())) {\r\n      alert(`${payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n            return [...state, payload];\r\n        case types.DELETE:\r\n            console.log(state);\r\n            console.log(payload);\r\n            return state.filter(contact => contact.id !== payload);\r\n        default:\r\n           return state; \r\n    }\r\n    \r\n}\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n    switch (type) {\r\n        case types.FILTER:\r\n            return payload;\r\n        default:\r\n           return state; \r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n}) ","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: reducer, \r\n})\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n\r\n","import shortid from \"shortid\";\r\nimport types from './contacts-types';\r\n\r\nconst addContact = (name, number) => ({\r\n    type: types.ADD,\r\n    payload: {\r\n        name,\r\n        number,\r\n        id: shortid.generate(),\r\n    }\r\n});\r\n\r\nconst deleteContact = (contactId) => ({\r\n    type: types.DELETE,\r\n    payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n    type: types.FILTER,\r\n    payload: value,\r\n})\r\n\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport actions from \"../../redux/contacts/contacts-actions\";\nimport styles from \"./contactForm.module.css\";\n\n function ContactForm({onAddContact}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAddContact(name,number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  \n  return (\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          id={nameInputId}\n          className={styles.contactName}\n        />\n      </label>\n      <label htmlFor={numberInputId}>Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          id={numberInputId}\n          className={styles.contactNumber}\n        />\n      </label>\n      <button type=\"submit\" className={styles.btn}>Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, number) => dispatch(actions.addContact(name, number))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styles from \"./contactList.module.css\";\nimport actions from \"../../redux/contacts/contacts-actions\";\n\n function ContactList({ contacts, onDeleteContact }) {\n  \n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactList__item}>\n          {name}: {number}\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={styles.btn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\n\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  const visibleContacts = getVisibleContacts(items,filter)\n  return {\n    contacts: visibleContacts,\n  }\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\n});\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/contacts/contacts-actions\";\nimport styles from \"./filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={styles.filter}>\n      <span className={styles.label}>Find contacts by name</span>\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter,\n  });\n\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (e) => dispatch(actions.changeFilter(e.target.value)),\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nexport default function App() {\n    \n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n  \n}\n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport  store  from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__1ZkBF\",\"contactName\":\"contactForm_contactName__2nfUX\",\"contactNumber\":\"contactForm_contactNumber__1mZ5e\",\"btn\":\"contactForm_btn__3MUw0\"};"],"sourceRoot":""}